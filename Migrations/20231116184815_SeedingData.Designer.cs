// <auto-generated />
using System;
using FootballTeams;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FootballTeams.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231116184815_SeedingData")]
    partial class SeedingData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("FootballTeams.Entities.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7d0e3e10-3c79-4273-9687-e18f004e2795"),
                            City = "Dallas",
                            State = "Texas"
                        },
                        new
                        {
                            Id = new Guid("29422329-769d-4b8b-a106-b0237bd9a688"),
                            City = "Cincinnati",
                            State = "Ohio"
                        },
                        new
                        {
                            Id = new Guid("64e36144-ff33-4ff0-b3d9-caf5fb09993b"),
                            City = "New Orleans",
                            State = "Louisiana"
                        },
                        new
                        {
                            Id = new Guid("a7409d89-7f0a-44e0-880d-492dc1fc2d56"),
                            City = "Foxborough",
                            State = "Massachusetts"
                        });
                });

            modelBuilder.Entity("FootballTeams.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("JerseyNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Salary")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("FootballTeams.Entities.Stadium", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Stadiums");

                    b.HasData(
                        new
                        {
                            Id = new Guid("83c59f7c-45e9-4f64-b0a0-2a46c649ea36"),
                            MaxCapacity = 80000
                        },
                        new
                        {
                            Id = new Guid("6f50bc14-f67d-4fa5-a778-bb7b8a4b687d"),
                            MaxCapacity = 65515
                        },
                        new
                        {
                            Id = new Guid("53b635bd-fb4e-452e-8d3c-cdc35714dc50"),
                            MaxCapacity = 76468
                        },
                        new
                        {
                            Id = new Guid("b534c9e0-b131-4d66-950d-33fa57013afe"),
                            MaxCapacity = 64628
                        });
                });

            modelBuilder.Entity("FootballTeams.Entities.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("DefensiveCoordinator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HeadCoach")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OffensiveCoordinator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SpecialTeamsCoordinator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("71da77c5-b700-4ada-8fec-ddbfb6686c96"),
                            DefensiveCoordinator = "Dan Quinn",
                            HeadCoach = "Mike McCarthy",
                            OffensiveCoordinator = "Brain Schottenheimer",
                            SpecialTeamsCoordinator = "John Fassel"
                        },
                        new
                        {
                            Id = new Guid("40610af7-d116-46ec-9c78-0bdc81e0d251"),
                            DefensiveCoordinator = "Lou Anarumo",
                            HeadCoach = "Zac Taylor",
                            OffensiveCoordinator = "Brian Callahan",
                            SpecialTeamsCoordinator = "Darrin Simmons"
                        },
                        new
                        {
                            Id = new Guid("7b5cd5cb-4a2b-4a75-a73e-df2eaa3b3645"),
                            DefensiveCoordinator = "Joe Woods",
                            HeadCoach = "Dennis Allen",
                            OffensiveCoordinator = "Pete Carmichael Jr.",
                            SpecialTeamsCoordinator = "Darren Rizzi"
                        },
                        new
                        {
                            Id = new Guid("1e5e3acc-21d5-450e-9a41-3e9fc83736bd"),
                            DefensiveCoordinator = "Jerod Mayo",
                            HeadCoach = "Bill Belichick",
                            OffensiveCoordinator = "Bill O'Brien",
                            SpecialTeamsCoordinator = "Cameron Achord"
                        });
                });

            modelBuilder.Entity("FootballTeams.Entities.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mascot")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StadiumId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StaffId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LocationId")
                        .IsUnique();

                    b.HasIndex("StadiumId")
                        .IsUnique();

                    b.HasIndex("StaffId")
                        .IsUnique();

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = new Guid("03d5a0cf-f03f-4226-adeb-6de9650ba333"),
                            LocationId = new Guid("7d0e3e10-3c79-4273-9687-e18f004e2795"),
                            Mascot = "Rowdy",
                            Name = "Dallas Cowboys",
                            OwnerName = "Jerry Jones",
                            StadiumId = new Guid("83c59f7c-45e9-4f64-b0a0-2a46c649ea36"),
                            StaffId = new Guid("71da77c5-b700-4ada-8fec-ddbfb6686c96")
                        },
                        new
                        {
                            Id = new Guid("a94c19d6-b630-4a98-8c1b-8296786268c3"),
                            LocationId = new Guid("29422329-769d-4b8b-a106-b0237bd9a688"),
                            Mascot = "Who Dey",
                            Name = "Cincinnati Bengals",
                            OwnerName = "Michael Brown",
                            StadiumId = new Guid("6f50bc14-f67d-4fa5-a778-bb7b8a4b687d"),
                            StaffId = new Guid("40610af7-d116-46ec-9c78-0bdc81e0d251")
                        },
                        new
                        {
                            Id = new Guid("943b80ff-58d0-4d6b-9df8-e30191fc8b6a"),
                            LocationId = new Guid("64e36144-ff33-4ff0-b3d9-caf5fb09993b"),
                            Mascot = "Sir Saint",
                            Name = "New Orleans Saints",
                            OwnerName = "Gayle Benson",
                            StadiumId = new Guid("53b635bd-fb4e-452e-8d3c-cdc35714dc50"),
                            StaffId = new Guid("7b5cd5cb-4a2b-4a75-a73e-df2eaa3b3645")
                        },
                        new
                        {
                            Id = new Guid("a750738e-3f01-4474-8cb9-aca46f6d2290"),
                            LocationId = new Guid("a7409d89-7f0a-44e0-880d-492dc1fc2d56"),
                            Mascot = "Pat Patriot",
                            Name = "New England Patriots",
                            OwnerName = "Robert Kraft",
                            StadiumId = new Guid("b534c9e0-b131-4d66-950d-33fa57013afe"),
                            StaffId = new Guid("1e5e3acc-21d5-450e-9a41-3e9fc83736bd")
                        });
                });

            modelBuilder.Entity("FootballTeams.Entities.TeamStats", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Losses")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Season")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Wins")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamStats");

                    b.HasData(
                        new
                        {
                            Id = new Guid("efee7476-ec10-467e-8a22-cfbf0e33d130"),
                            Losses = 5,
                            Season = 2022,
                            TeamId = new Guid("03d5a0cf-f03f-4226-adeb-6de9650ba333"),
                            Wins = 12
                        },
                        new
                        {
                            Id = new Guid("febc9d14-e9f4-49ec-a129-37d43c5c1000"),
                            Losses = 5,
                            Season = 2021,
                            TeamId = new Guid("03d5a0cf-f03f-4226-adeb-6de9650ba333"),
                            Wins = 12
                        },
                        new
                        {
                            Id = new Guid("767fee9d-01db-4f12-9149-f48416d8fa12"),
                            Losses = 10,
                            Season = 2020,
                            TeamId = new Guid("03d5a0cf-f03f-4226-adeb-6de9650ba333"),
                            Wins = 6
                        },
                        new
                        {
                            Id = new Guid("583698ac-ebc9-4343-83f6-a2f2f4daf0c0"),
                            Losses = 4,
                            Season = 2022,
                            TeamId = new Guid("a94c19d6-b630-4a98-8c1b-8296786268c3"),
                            Wins = 12
                        },
                        new
                        {
                            Id = new Guid("645cdff2-a5e4-4f45-a66a-3e5f51864bdd"),
                            Losses = 7,
                            Season = 2021,
                            TeamId = new Guid("a94c19d6-b630-4a98-8c1b-8296786268c3"),
                            Wins = 10
                        },
                        new
                        {
                            Id = new Guid("a1fba9fd-dff0-43ab-a982-df02b6ef13f6"),
                            Losses = 11,
                            Season = 2020,
                            TeamId = new Guid("a94c19d6-b630-4a98-8c1b-8296786268c3"),
                            Wins = 4
                        },
                        new
                        {
                            Id = new Guid("acabe807-0b9e-4a53-8146-739f4b31529e"),
                            Losses = 10,
                            Season = 2022,
                            TeamId = new Guid("943b80ff-58d0-4d6b-9df8-e30191fc8b6a"),
                            Wins = 7
                        },
                        new
                        {
                            Id = new Guid("5b48a1db-15f4-4de8-b533-82a0a1404c0d"),
                            Losses = 8,
                            Season = 2021,
                            TeamId = new Guid("943b80ff-58d0-4d6b-9df8-e30191fc8b6a"),
                            Wins = 9
                        },
                        new
                        {
                            Id = new Guid("be573535-c72a-416d-a890-d8368b74cbdb"),
                            Losses = 4,
                            Season = 2020,
                            TeamId = new Guid("943b80ff-58d0-4d6b-9df8-e30191fc8b6a"),
                            Wins = 12
                        },
                        new
                        {
                            Id = new Guid("73434893-0bb0-49e4-abf3-43bdddeb0120"),
                            Losses = 9,
                            Season = 2022,
                            TeamId = new Guid("a750738e-3f01-4474-8cb9-aca46f6d2290"),
                            Wins = 8
                        },
                        new
                        {
                            Id = new Guid("fc57b8a8-af58-4113-a22e-9b73a3022708"),
                            Losses = 7,
                            Season = 2021,
                            TeamId = new Guid("a750738e-3f01-4474-8cb9-aca46f6d2290"),
                            Wins = 10
                        },
                        new
                        {
                            Id = new Guid("ec0b8ebd-fd38-4aab-85f7-ca8ef5f83646"),
                            Losses = 9,
                            Season = 2020,
                            TeamId = new Guid("a750738e-3f01-4474-8cb9-aca46f6d2290"),
                            Wins = 7
                        });
                });

            modelBuilder.Entity("FootballTeams.Entities.Player", b =>
                {
                    b.HasOne("FootballTeams.Entities.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("FootballTeams.Entities.Team", b =>
                {
                    b.HasOne("FootballTeams.Entities.Location", "Location")
                        .WithOne("Team")
                        .HasForeignKey("FootballTeams.Entities.Team", "LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FootballTeams.Entities.Stadium", "Stadium")
                        .WithOne("Team")
                        .HasForeignKey("FootballTeams.Entities.Team", "StadiumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FootballTeams.Entities.Staff", "Staff")
                        .WithOne("Team")
                        .HasForeignKey("FootballTeams.Entities.Team", "StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Stadium");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("FootballTeams.Entities.TeamStats", b =>
                {
                    b.HasOne("FootballTeams.Entities.Team", "Team")
                        .WithMany("TeamStats")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("FootballTeams.Entities.Location", b =>
                {
                    b.Navigation("Team")
                        .IsRequired();
                });

            modelBuilder.Entity("FootballTeams.Entities.Stadium", b =>
                {
                    b.Navigation("Team")
                        .IsRequired();
                });

            modelBuilder.Entity("FootballTeams.Entities.Staff", b =>
                {
                    b.Navigation("Team")
                        .IsRequired();
                });

            modelBuilder.Entity("FootballTeams.Entities.Team", b =>
                {
                    b.Navigation("Players");

                    b.Navigation("TeamStats");
                });
#pragma warning restore 612, 618
        }
    }
}
